/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.PowerStationAdminRole;


import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.PowerStationOrganization;
import Business.Organization.GridEnergyStorageOrganization;
import Business.Person.PowerStationAdmin;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PowerAdminEnrollmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class GridEnergyStorageEnrollmentJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
   // private Ecosystem business;
    private Enterprise enterprise;
    private PowerStationAdmin pAdmin;
      private Organization organization;
  //  private WarehouseOrganization warehouseOrganization;
    /**
     * Creates new form WarehouseEnrollmentJPanel
     */
    public GridEnergyStorageEnrollmentJPanel(JPanel userProcessContainer,UserAccount userAccount,Organization organization,Enterprise enterprise ) {   //Ecosystem business  //Enterprise enterprise
        initComponents();
        this.userProcessContainer = userProcessContainer;                         //ManufacturerOrganization organization
        this.userAccount = userAccount;
        this.organization = (PowerStationOrganization)organization;
       // this.warehouseOrganization = warehouseOrganization;
       // this.warehouseorganization = (WarehouseOrganization)organization;
        this.enterprise = enterprise;
        this.pAdmin = pAdmin;
        populateRequestTable();
      //  this.business = business;
    }
    
    
    
    
    
    private void populateRequestTable(){
         DefaultTableModel defaultTableModel = (DefaultTableModel)workReqJTable.getModel();
        defaultTableModel.setRowCount(0);
        
        for(WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList()){
             Object row[] = new Object[4];
            row[0] = workRequest.getMessage();
            row[1] = workRequest.getReceiver() == null?null:workRequest.getReceiver().getEmployee();
            row[2] = workRequest.getStatus();
            String result = ((PowerAdminEnrollmentWorkRequest)workRequest).getResult();
            row[3] = result == null?null:result;
            
            defaultTableModel.addRow(row);
        }
    }
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workReqJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        messageJTextField = new javax.swing.JTextField();
        enrollmentRequestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));

        workReqJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workReqJTable);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Message:");

        enrollmentRequestJButton.setText("Enrollment Request");
        enrollmentRequestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrollmentRequestJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("                        CHECK IN TO GRID ENERGY STORAGE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(438, 438, 438)
                        .addComponent(enrollmentRequestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(backJButton)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(748, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(108, 108, 108)
                .addComponent(enrollmentRequestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(backJButton)
                .addGap(175, 175, 175))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void enrollmentRequestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrollmentRequestJButtonActionPerformed
        // TODO add your handling code here:
        String message = messageJTextField.getText();
         if(message.trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Message is empty");
            return;
        }
         
         PowerAdminEnrollmentWorkRequest request = new PowerAdminEnrollmentWorkRequest();
         request.setSender(userAccount);
         request.setStatus("Pending");
         request.setMessage(message);
         //System.out.println(organization.getOrganizationDirectory());
        // WarehouseOrganization warehouseOrganization = new WarehouseOrganization();
         
       // warehouseOrganization = (WarehouseOrganization) organization.getOrganizationDirectory().getOrganization(Type.Warehouse);//getOrganizationDirectory().getOrganization(Type.Warehouse);
            // System.out.println(organization.getWorkQueue().getWorkRequestList());
  //               System.out.println(warehouseOrganization.getWorkQueue().getWorkRequestList().add(manufacturerEnrollmentRequest));
         GridEnergyStorageOrganization warehouseOrganization = (GridEnergyStorageOrganization)enterprise.getOrganizationDirectory().getOrganization(Type.GridEnergyStorage);
         warehouseOrganization.getWorkQueue().getWorkRequestList().add(request);
         this.userAccount.getWorkQueue().getWorkRequestList().add(request);
         populateRequestTable();
        
         
         
         
    }//GEN-LAST:event_enrollmentRequestJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton enrollmentRequestJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JTable workReqJTable;
    // End of variables declaration//GEN-END:variables
}
